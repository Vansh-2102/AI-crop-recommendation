{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{// Check if user is already logged in\nconst token=localStorage.getItem('access_token');const userData=localStorage.getItem('user');if(token&&userData){try{setUser(JSON.parse(userData));setIsAuthenticated(true);}catch(error){console.error('Error parsing user data:',error);localStorage.removeItem('access_token');localStorage.removeItem('user');}}setLoading(false);},[]);const login=async(email,password)=>{try{setLoading(true);const credentials={email,password};const response=await authAPI.login(credentials);const{access_token,user:userData}=response.data;localStorage.setItem('access_token',access_token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);setIsAuthenticated(true);toast.success('Login successful!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed';toast.error(message);throw new Error(message);}finally{setLoading(false);}};const register=async(name,email,password)=>{try{setLoading(true);const userData={name,email,password};const response=await authAPI.register(userData);const{access_token,user:newUser}=response.data;localStorage.setItem('access_token',access_token);localStorage.setItem('user',JSON.stringify(newUser));setUser(newUser);setIsAuthenticated(true);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Registration failed';toast.error(message);throw new Error(message);}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('access_token');localStorage.removeItem('user');setUser(null);setIsAuthenticated(false);toast.success('Logged out successfully');};const updateProfile=async profileData=>{try{setLoading(true);const response=await authAPI.updateProfile(profileData);const updatedUser=response.data.user;localStorage.setItem('user',JSON.stringify(updatedUser));setUser(updatedUser);toast.success('Profile updated successfully!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Profile update failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const changePassword=async passwordData=>{try{setLoading(true);await authAPI.changePassword(passwordData);toast.success('Password changed successfully!');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Password change failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const value={user,isAuthenticated,loading,login,register,logout,updateProfile,changePassword};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","email","password","credentials","response","access_token","data","setItem","stringify","success","_error$response","_error$response$data","message","register","name","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","changePassword","passwordData","_error$response4","_error$response4$data","value","Provider"],"sources":["D:/deep ai farm/AI-crop-recommendation/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('access_token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const credentials = { email, password };\r\n      const response = await authAPI.login(credentials);\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      toast.success('Login successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      throw new Error(message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const userData = { name, email, password };\r\n      const response = await authAPI.register(userData);\r\n      const { access_token, user: newUser } = response.data;\r\n      \r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n      toast.success('Registration successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      throw new Error(message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.updateProfile(profileData);\r\n      const updatedUser = response.data.user;\r\n      \r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      setLoading(true);\r\n      await authAPI.changePassword(passwordData);\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}