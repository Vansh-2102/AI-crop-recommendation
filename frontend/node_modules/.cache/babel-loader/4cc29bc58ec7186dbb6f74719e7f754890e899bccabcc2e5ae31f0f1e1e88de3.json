{"ast":null,"code":"var _jsxFileName = \"D:\\\\deep ai farm\\\\AI-crop-recommendation\\\\frontend\\\\src\\\\pages\\\\SoilAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Droplets, Upload, BarChart3, Sprout } from 'lucide-react';\nimport { soilAPI, recommendationsAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoilAnalysis = () => {\n  _s();\n  const [soilData, setSoilData] = useState({\n    ph: '',\n    nitrogen: '',\n    phosphorus: '',\n    potassium: '',\n    moisture: '',\n    temperature: '',\n    clay: '',\n    sand: '',\n    silt: '',\n    organic_matter: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [cropRecommendations, setCropRecommendations] = useState(null);\n  const [recommendationsLoading, setRecommendationsLoading] = useState(false);\n  const handleChange = e => {\n    setSoilData({\n      ...soilData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Build payload for backend analyze endpoint\n      const payload = {\n        soil_data: {\n          ph: soilData.ph !== '' ? parseFloat(soilData.ph) : undefined,\n          nitrogen: soilData.nitrogen !== '' ? parseFloat(soilData.nitrogen) / 1000 : undefined,\n          phosphorus: soilData.phosphorus !== '' ? parseFloat(soilData.phosphorus) : undefined,\n          potassium: soilData.potassium !== '' ? parseFloat(soilData.potassium) : undefined,\n          moisture: soilData.moisture !== '' ? Math.min(1, Math.max(0, parseFloat(soilData.moisture) / 100)) : undefined,\n          temperature: soilData.temperature !== '' ? parseFloat(soilData.temperature) : undefined\n        }\n      };\n      const {\n        data\n      } = await soilAPI.analyzeSoil(payload);\n\n      // Map backend response to UI-friendly shape\n      const analysis = (data === null || data === void 0 ? void 0 : data.analysis) || {};\n      const summary = (data === null || data === void 0 ? void 0 : data.summary) || {};\n      const ui = {\n        soilType: analysis.soil_type || 'N/A',\n        fertility: (analysis.fertility_level || 'medium').charAt(0).toUpperCase() + (analysis.fertility_level || 'medium').slice(1),\n        recommendations: (analysis.recommendations || []).map(r => r.message || r.action || ''),\n        suitableCrops: [],\n        score: data === null || data === void 0 ? void 0 : data.soil_quality_score,\n        overallStatus: summary.overall_status\n      };\n      setResults(ui);\n      toast.success('Soil analysis completed!');\n    } catch (error) {\n      toast.error('Analysis failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"soil-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Soil Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyze your soil composition and get recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Soil Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"soil-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ph\",\n                children: \"pH Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"ph\",\n                name: \"ph\",\n                value: soilData.ph,\n                onChange: handleChange,\n                step: \"0.1\",\n                min: \"0\",\n                max: \"14\",\n                placeholder: \"6.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nitrogen\",\n                children: \"Nitrogen (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"nitrogen\",\n                name: \"nitrogen\",\n                value: soilData.nitrogen,\n                onChange: handleChange,\n                placeholder: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phosphorus\",\n                children: \"Phosphorus (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"phosphorus\",\n                name: \"phosphorus\",\n                value: soilData.phosphorus,\n                onChange: handleChange,\n                placeholder: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"potassium\",\n                children: \"Potassium (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"potassium\",\n                name: \"potassium\",\n                value: soilData.potassium,\n                onChange: handleChange,\n                placeholder: \"150\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moisture\",\n                children: \"Moisture (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"moisture\",\n                name: \"moisture\",\n                value: soilData.moisture,\n                onChange: handleChange,\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"temperature\",\n                children: \"Temperature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"temperature\",\n                name: \"temperature\",\n                value: soilData.temperature,\n                onChange: handleChange,\n                placeholder: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            className: \"analyze-button\",\n            children: loading ? 'Analyzing...' : 'Analyze Soil'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Soil Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.soilType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Fertility Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `fertility ${results.fertility.toLowerCase()}`,\n              children: results.fertility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), typeof results.score === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Soil Quality Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [results.score, \"/100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), results.overallStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Overall Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.overallStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: results.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: rec\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suitable-crops\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommended Crops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crops-grid\",\n            children: results.suitableCrops.map((crop, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"crop-tag\",\n              children: crop\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SoilAnalysis, \"WyXiJgrTLmbwQ6tjX8vtJg2ApLw=\");\n_c = SoilAnalysis;\nexport default SoilAnalysis;\nvar _c;\n$RefreshReg$(_c, \"SoilAnalysis\");","map":{"version":3,"names":["React","useState","toast","Droplets","Upload","BarChart3","Sprout","soilAPI","recommendationsAPI","jsxDEV","_jsxDEV","SoilAnalysis","_s","soilData","setSoilData","ph","nitrogen","phosphorus","potassium","moisture","temperature","clay","sand","silt","organic_matter","loading","setLoading","results","setResults","cropRecommendations","setCropRecommendations","recommendationsLoading","setRecommendationsLoading","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","soil_data","parseFloat","undefined","Math","min","max","data","analyzeSoil","analysis","summary","ui","soilType","soil_type","fertility","fertility_level","charAt","toUpperCase","slice","recommendations","map","r","message","action","suitableCrops","score","soil_quality_score","overallStatus","overall_status","success","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","step","placeholder","disabled","toLowerCase","rec","index","crop","_c","$RefreshReg$"],"sources":["D:/deep ai farm/AI-crop-recommendation/frontend/src/pages/SoilAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { Droplets, Upload, BarChart3, Sprout } from 'lucide-react';\r\nimport { soilAPI, recommendationsAPI } from '../services/api';\r\n\r\nconst SoilAnalysis = () => {\r\n  const [soilData, setSoilData] = useState({\r\n    ph: '',\r\n    nitrogen: '',\r\n    phosphorus: '',\r\n    potassium: '',\r\n    moisture: '',\r\n    temperature: '',\r\n    clay: '',\r\n    sand: '',\r\n    silt: '',\r\n    organic_matter: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [cropRecommendations, setCropRecommendations] = useState(null);\r\n  const [recommendationsLoading, setRecommendationsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setSoilData({\r\n      ...soilData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Build payload for backend analyze endpoint\r\n      const payload = {\r\n        soil_data: {\r\n          ph: soilData.ph !== '' ? parseFloat(soilData.ph) : undefined,\r\n          nitrogen: soilData.nitrogen !== '' ? parseFloat(soilData.nitrogen) / 1000 : undefined,\r\n          phosphorus: soilData.phosphorus !== '' ? parseFloat(soilData.phosphorus) : undefined,\r\n          potassium: soilData.potassium !== '' ? parseFloat(soilData.potassium) : undefined,\r\n          moisture: soilData.moisture !== '' ? Math.min(1, Math.max(0, parseFloat(soilData.moisture) / 100)) : undefined,\r\n          temperature: soilData.temperature !== '' ? parseFloat(soilData.temperature) : undefined\r\n        }\r\n      };\r\n\r\n      const { data } = await soilAPI.analyzeSoil(payload);\r\n\r\n      // Map backend response to UI-friendly shape\r\n      const analysis = data?.analysis || {};\r\n      const summary = data?.summary || {};\r\n      const ui = {\r\n        soilType: analysis.soil_type || 'N/A',\r\n        fertility: (analysis.fertility_level || 'medium').charAt(0).toUpperCase() + (analysis.fertility_level || 'medium').slice(1),\r\n        recommendations: (analysis.recommendations || []).map(r => r.message || r.action || ''),\r\n        suitableCrops: [],\r\n        score: data?.soil_quality_score,\r\n        overallStatus: summary.overall_status,\r\n      };\r\n\r\n      setResults(ui);\r\n      toast.success('Soil analysis completed!');\r\n    } catch (error) {\r\n      toast.error('Analysis failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"soil-analysis\">\r\n      <div className=\"page-header\">\r\n        <h1>Soil Analysis</h1>\r\n        <p>Analyze your soil composition and get recommendations</p>\r\n      </div>\r\n\r\n      <div className=\"analysis-container\">\r\n        <div className=\"input-section\">\r\n          <h2>Enter Soil Data</h2>\r\n          <form onSubmit={handleSubmit} className=\"soil-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ph\">pH Level</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"ph\"\r\n                  name=\"ph\"\r\n                  value={soilData.ph}\r\n                  onChange={handleChange}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"14\"\r\n                  placeholder=\"6.5\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"nitrogen\">Nitrogen (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"nitrogen\"\r\n                  name=\"nitrogen\"\r\n                  value={soilData.nitrogen}\r\n                  onChange={handleChange}\r\n                  placeholder=\"50\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phosphorus\">Phosphorus (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"phosphorus\"\r\n                  name=\"phosphorus\"\r\n                  value={soilData.phosphorus}\r\n                  onChange={handleChange}\r\n                  placeholder=\"25\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"potassium\">Potassium (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"potassium\"\r\n                  name=\"potassium\"\r\n                  value={soilData.potassium}\r\n                  onChange={handleChange}\r\n                  placeholder=\"150\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"moisture\">Moisture (%)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"moisture\"\r\n                  name=\"moisture\"\r\n                  value={soilData.moisture}\r\n                  onChange={handleChange}\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  placeholder=\"60\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"temperature\">Temperature (°C)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"temperature\"\r\n                  name=\"temperature\"\r\n                  value={soilData.temperature}\r\n                  onChange={handleChange}\r\n                  placeholder=\"25\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"analyze-button\"\r\n            >\r\n              {loading ? 'Analyzing...' : 'Analyze Soil'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {results && (\r\n          <div className=\"results-section\">\r\n            <h2>Analysis Results</h2>\r\n            <div className=\"results-grid\">\r\n              <div className=\"result-card\">\r\n                <h3>Soil Type</h3>\r\n                <p>{results.soilType}</p>\r\n              </div>\r\n              \r\n              <div className=\"result-card\">\r\n                <h3>Fertility Level</h3>\r\n                <p className={`fertility ${results.fertility.toLowerCase()}`}>\r\n                  {results.fertility}\r\n                </p>\r\n              </div>\r\n              {typeof results.score === 'number' && (\r\n                <div className=\"result-card\">\r\n                  <h3>Soil Quality Score</h3>\r\n                  <p>{results.score}/100</p>\r\n                </div>\r\n              )}\r\n              {results.overallStatus && (\r\n                <div className=\"result-card\">\r\n                  <h3>Overall Status</h3>\r\n                  <p>{results.overallStatus}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"recommendations\">\r\n              <h3>Recommendations</h3>\r\n              <ul>\r\n                {results.recommendations.map((rec, index) => (\r\n                  <li key={index}>{rec}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"suitable-crops\">\r\n              <h3>Recommended Crops</h3>\r\n              <div className=\"crops-grid\">\r\n                {results.suitableCrops.map((crop, index) => (\r\n                  <span key={index} className=\"crop-tag\">\r\n                    {crop}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoilAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}