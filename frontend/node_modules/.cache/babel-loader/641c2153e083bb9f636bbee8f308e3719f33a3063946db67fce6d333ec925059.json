{"ast":null,"code":"var _jsxFileName = \"D:\\\\deep ai farm\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('access_token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login(credentials);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register(userData);\n      const {\n        access_token,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      setIsAuthenticated(true);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      const response = await authAPI.updateProfile(profileData);\n      const updatedUser = response.data.user;\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const changePassword = async passwordData => {\n    try {\n      setLoading(true);\n      await authAPI.changePassword(passwordData);\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","credentials","response","access_token","data","setItem","stringify","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","changePassword","passwordData","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/deep ai farm/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('access_token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.login(credentials);\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      toast.success('Login successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.register(userData);\r\n      const { access_token, user: newUser } = response.data;\r\n      \r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n      toast.success('Registration successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.updateProfile(profileData);\r\n      const updatedUser = response.data.user;\r\n      \r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      setLoading(true);\r\n      await authAPI.changePassword(passwordData);\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}