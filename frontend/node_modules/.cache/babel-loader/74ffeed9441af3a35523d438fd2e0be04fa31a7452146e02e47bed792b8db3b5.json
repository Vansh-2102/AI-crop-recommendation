{"ast":null,"code":"import React,{useState}from'react';import{Camera,Upload,AlertTriangle,CheckCircle,X}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DiseaseDetection=()=>{const[selectedImage,setSelectedImage]=useState(null);const[analysisResult,setAnalysisResult]=useState(null);const[loading,setLoading]=useState(false);const[dragActive,setDragActive]=useState(false);const handleImageUpload=file=>{if(file&&file.type.startsWith('image/')){setSelectedImage(file);setAnalysisResult(null);}};const handleDrag=e=>{e.preventDefault();e.stopPropagation();if(e.type==='dragenter'||e.type==='dragover'){setDragActive(true);}else if(e.type==='dragleave'){setDragActive(false);}};const handleDrop=e=>{e.preventDefault();e.stopPropagation();setDragActive(false);if(e.dataTransfer.files&&e.dataTransfer.files[0]){handleImageUpload(e.dataTransfer.files[0]);}};const handleFileInput=e=>{if(e.target.files&&e.target.files[0]){handleImageUpload(e.target.files[0]);}};const analyzeImage=async()=>{if(!selectedImage)return;setLoading(true);try{// Simulate AI analysis\nawait new Promise(resolve=>setTimeout(resolve,3000));const mockResult={disease:'Leaf Blight',confidence:87,severity:'Moderate',description:'Leaf blight is a common fungal disease that affects plant leaves, causing brown spots and eventual leaf death.',treatment:['Remove and destroy infected plant material','Apply fungicide containing copper or chlorothalonil','Improve air circulation around plants','Avoid overhead watering'],prevention:['Plant disease-resistant varieties','Maintain proper spacing between plants','Water at the base of plants','Rotate crops annually']};setAnalysisResult(mockResult);}catch(error){console.error('Analysis failed:',error);}finally{setLoading(false);}};const clearImage=()=>{setSelectedImage(null);setAnalysisResult(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"disease-detection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Disease Detection\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload an image of your plant to detect diseases using AI\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detection-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload Plant Image\"}),!selectedImage?/*#__PURE__*/_jsx(\"div\",{className:\"upload-area \".concat(dragActive?'drag-active':''),onDragEnter:handleDrag,onDragLeave:handleDrag,onDragOver:handleDrag,onDrop:handleDrop,children:/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsx(Camera,{size:48,className:\"upload-icon\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Drag & Drop or Click to Upload\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload an image of your plant leaves, stems, or fruits\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",onChange:handleFileInput,className:\"file-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"upload-btn\",children:\"Choose File\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"image-preview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"preview-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Selected Image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearImage,className:\"clear-btn\",children:/*#__PURE__*/_jsx(X,{size:20})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-image\",children:/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(selectedImage),alt:\"Plant preview\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:analyzeImage,disabled:loading,className:\"analyze-btn\",children:loading?'Analyzing...':'Analyze Image'})]})]}),analysisResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analysis Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"disease-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:analysisResult.disease}),/*#__PURE__*/_jsx(\"div\",{className:\"confidence\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Confidence: \",analysisResult.confidence,\"%\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"severity \".concat(analysisResult.severity.toLowerCase()),children:analysisResult.severity})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-description\",children:/*#__PURE__*/_jsx(\"p\",{children:analysisResult.description})}),/*#__PURE__*/_jsxs(\"div\",{className:\"treatment-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Treatment Recommendations\"}),/*#__PURE__*/_jsx(\"ul\",{children:analysisResult.treatment.map((item,index)=>/*#__PURE__*/_jsx(\"li\",{children:item},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"prevention-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Prevention Tips\"}),/*#__PURE__*/_jsx(\"ul\",{children:analysisResult.prevention.map((item,index)=>/*#__PURE__*/_jsx(\"li\",{children:item},index))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tips-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tips for Better Detection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tips-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tip-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCF8 Image Quality\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Use clear, well-lit images with good contrast for better accuracy.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDF3F Focus on Affected Areas\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Capture the diseased parts of the plant clearly in the image.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD0D Multiple Angles\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Take photos from different angles to get a complete view.\"})]})]})]})]})]});};export default DiseaseDetection;","map":{"version":3,"names":["React","useState","Camera","Upload","AlertTriangle","CheckCircle","X","jsx","_jsx","jsxs","_jsxs","DiseaseDetection","selectedImage","setSelectedImage","analysisResult","setAnalysisResult","loading","setLoading","dragActive","setDragActive","handleImageUpload","file","type","startsWith","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","files","handleFileInput","target","analyzeImage","Promise","resolve","setTimeout","mockResult","disease","confidence","severity","description","treatment","prevention","error","console","clearImage","className","children","concat","onDragEnter","onDragLeave","onDragOver","onDrop","size","accept","onChange","onClick","src","URL","createObjectURL","alt","disabled","toLowerCase","map","item","index"],"sources":["D:/deep ai farm/AI-crop-recommendation/frontend/src/pages/DiseaseDetection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Camera, Upload, AlertTriangle, CheckCircle, X } from 'lucide-react';\r\n\r\nconst DiseaseDetection = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n\r\n  const handleImageUpload = (file) => {\r\n    if (file && file.type.startsWith('image/')) {\r\n      setSelectedImage(file);\r\n      setAnalysisResult(null);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      handleImageUpload(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileInput = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      handleImageUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const analyzeImage = async () => {\r\n    if (!selectedImage) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Simulate AI analysis\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n      \r\n      const mockResult = {\r\n        disease: 'Leaf Blight',\r\n        confidence: 87,\r\n        severity: 'Moderate',\r\n        description: 'Leaf blight is a common fungal disease that affects plant leaves, causing brown spots and eventual leaf death.',\r\n        treatment: [\r\n          'Remove and destroy infected plant material',\r\n          'Apply fungicide containing copper or chlorothalonil',\r\n          'Improve air circulation around plants',\r\n          'Avoid overhead watering'\r\n        ],\r\n        prevention: [\r\n          'Plant disease-resistant varieties',\r\n          'Maintain proper spacing between plants',\r\n          'Water at the base of plants',\r\n          'Rotate crops annually'\r\n        ]\r\n      };\r\n      \r\n      setAnalysisResult(mockResult);\r\n    } catch (error) {\r\n      console.error('Analysis failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearImage = () => {\r\n    setSelectedImage(null);\r\n    setAnalysisResult(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"disease-detection\">\r\n      <div className=\"page-header\">\r\n        <h1>Disease Detection</h1>\r\n        <p>Upload an image of your plant to detect diseases using AI</p>\r\n      </div>\r\n\r\n      <div className=\"detection-container\">\r\n        <div className=\"upload-section\">\r\n          <h2>Upload Plant Image</h2>\r\n          \r\n          {!selectedImage ? (\r\n            <div\r\n              className={`upload-area ${dragActive ? 'drag-active' : ''}`}\r\n              onDragEnter={handleDrag}\r\n              onDragLeave={handleDrag}\r\n              onDragOver={handleDrag}\r\n              onDrop={handleDrop}\r\n            >\r\n              <div className=\"upload-content\">\r\n                <Camera size={48} className=\"upload-icon\" />\r\n                <h3>Drag & Drop or Click to Upload</h3>\r\n                <p>Upload an image of your plant leaves, stems, or fruits</p>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleFileInput}\r\n                  className=\"file-input\"\r\n                />\r\n                <button className=\"upload-btn\">Choose File</button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"image-preview\">\r\n              <div className=\"preview-header\">\r\n                <h3>Selected Image</h3>\r\n                <button onClick={clearImage} className=\"clear-btn\">\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n              <div className=\"preview-image\">\r\n                <img\r\n                  src={URL.createObjectURL(selectedImage)}\r\n                  alt=\"Plant preview\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={analyzeImage}\r\n                disabled={loading}\r\n                className=\"analyze-btn\"\r\n              >\r\n                {loading ? 'Analyzing...' : 'Analyze Image'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {analysisResult && (\r\n          <div className=\"results-section\">\r\n            <h2>Analysis Results</h2>\r\n            <div className=\"result-card\">\r\n              <div className=\"result-header\">\r\n                <div className=\"disease-info\">\r\n                  <h3>{analysisResult.disease}</h3>\r\n                  <div className=\"confidence\">\r\n                    <span>Confidence: {analysisResult.confidence}%</span>\r\n                  </div>\r\n                </div>\r\n                <div className={`severity ${analysisResult.severity.toLowerCase()}`}>\r\n                  {analysisResult.severity}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"result-description\">\r\n                <p>{analysisResult.description}</p>\r\n              </div>\r\n\r\n              <div className=\"treatment-section\">\r\n                <h4>Treatment Recommendations</h4>\r\n                <ul>\r\n                  {analysisResult.treatment.map((item, index) => (\r\n                    <li key={index}>{item}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"prevention-section\">\r\n                <h4>Prevention Tips</h4>\r\n                <ul>\r\n                  {analysisResult.prevention.map((item, index) => (\r\n                    <li key={index}>{item}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"tips-section\">\r\n          <h2>Tips for Better Detection</h2>\r\n          <div className=\"tips-grid\">\r\n            <div className=\"tip-card\">\r\n              <h3>📸 Image Quality</h3>\r\n              <p>Use clear, well-lit images with good contrast for better accuracy.</p>\r\n            </div>\r\n            <div className=\"tip-card\">\r\n              <h3>🌿 Focus on Affected Areas</h3>\r\n              <p>Capture the diseased parts of the plant clearly in the image.</p>\r\n            </div>\r\n            <div className=\"tip-card\">\r\n              <h3>🔍 Multiple Angles</h3>\r\n              <p>Take photos from different angles to get a complete view.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseaseDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}