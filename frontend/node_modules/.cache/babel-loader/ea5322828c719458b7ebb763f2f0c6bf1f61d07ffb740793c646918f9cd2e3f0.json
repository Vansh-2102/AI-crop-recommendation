{"ast":null,"code":"import _objectSpread from\"D:/deep ai farm/AI-crop-recommendation/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{toast}from'react-hot-toast';import{Droplets,Upload,BarChart3}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SoilAnalysis=()=>{const[soilData,setSoilData]=useState({ph:'',nitrogen:'',phosphorus:'',potassium:'',moisture:'',temperature:''});const[loading,setLoading]=useState(false);const[results,setResults]=useState(null);const handleChange=e=>{setSoilData(_objectSpread(_objectSpread({},soilData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,2000));const mockResults={soilType:'Loamy Soil',fertility:'High',recommendations:['Add organic compost to improve soil structure','Consider crop rotation with legumes','Monitor pH levels regularly'],suitableCrops:['Wheat','Rice','Corn','Soybeans']};setResults(mockResults);toast.success('Soil analysis completed!');}catch(error){toast.error('Analysis failed. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"soil-analysis\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Soil Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Analyze your soil composition and get recommendations\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter Soil Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"soil-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ph\",children:\"pH Level\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"ph\",name:\"ph\",value:soilData.ph,onChange:handleChange,step:\"0.1\",min:\"0\",max:\"14\",placeholder:\"6.5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nitrogen\",children:\"Nitrogen (ppm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"nitrogen\",name:\"nitrogen\",value:soilData.nitrogen,onChange:handleChange,placeholder:\"50\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phosphorus\",children:\"Phosphorus (ppm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"phosphorus\",name:\"phosphorus\",value:soilData.phosphorus,onChange:handleChange,placeholder:\"25\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"potassium\",children:\"Potassium (ppm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"potassium\",name:\"potassium\",value:soilData.potassium,onChange:handleChange,placeholder:\"150\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"moisture\",children:\"Moisture (%)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"moisture\",name:\"moisture\",value:soilData.moisture,onChange:handleChange,min:\"0\",max:\"100\",placeholder:\"60\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"temperature\",children:\"Temperature (\\xB0C)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"temperature\",name:\"temperature\",value:soilData.temperature,onChange:handleChange,placeholder:\"25\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"analyze-button\",children:loading?'Analyzing...':'Analyze Soil'})]})]}),results&&/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analysis Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Soil Type\"}),/*#__PURE__*/_jsx(\"p\",{children:results.soilType})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Fertility Level\"}),/*#__PURE__*/_jsx(\"p\",{className:\"fertility \".concat(results.fertility.toLowerCase()),children:results.fertility})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendations\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"ul\",{children:results.recommendations.map((rec,index)=>/*#__PURE__*/_jsx(\"li\",{children:rec},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"suitable-crops\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recommended Crops\"}),/*#__PURE__*/_jsx(\"div\",{className:\"crops-grid\",children:results.suitableCrops.map((crop,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"crop-tag\",children:crop},index))})]})]})]})]});};export default SoilAnalysis;","map":{"version":3,"names":["React","useState","toast","Droplets","Upload","BarChart3","jsx","_jsx","jsxs","_jsxs","SoilAnalysis","soilData","setSoilData","ph","nitrogen","phosphorus","potassium","moisture","temperature","loading","setLoading","results","setResults","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","Promise","resolve","setTimeout","mockResults","soilType","fertility","recommendations","suitableCrops","success","error","className","children","onSubmit","htmlFor","type","id","onChange","step","min","max","placeholder","disabled","concat","toLowerCase","map","rec","index","crop"],"sources":["D:/deep ai farm/AI-crop-recommendation/frontend/src/pages/SoilAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { Droplets, Upload, BarChart3 } from 'lucide-react';\r\n\r\nconst SoilAnalysis = () => {\r\n  const [soilData, setSoilData] = useState({\r\n    ph: '',\r\n    nitrogen: '',\r\n    phosphorus: '',\r\n    potassium: '',\r\n    moisture: '',\r\n    temperature: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setSoilData({\r\n      ...soilData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      const mockResults = {\r\n        soilType: 'Loamy Soil',\r\n        fertility: 'High',\r\n        recommendations: [\r\n          'Add organic compost to improve soil structure',\r\n          'Consider crop rotation with legumes',\r\n          'Monitor pH levels regularly'\r\n        ],\r\n        suitableCrops: ['Wheat', 'Rice', 'Corn', 'Soybeans']\r\n      };\r\n      \r\n      setResults(mockResults);\r\n      toast.success('Soil analysis completed!');\r\n    } catch (error) {\r\n      toast.error('Analysis failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"soil-analysis\">\r\n      <div className=\"page-header\">\r\n        <h1>Soil Analysis</h1>\r\n        <p>Analyze your soil composition and get recommendations</p>\r\n      </div>\r\n\r\n      <div className=\"analysis-container\">\r\n        <div className=\"input-section\">\r\n          <h2>Enter Soil Data</h2>\r\n          <form onSubmit={handleSubmit} className=\"soil-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ph\">pH Level</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"ph\"\r\n                  name=\"ph\"\r\n                  value={soilData.ph}\r\n                  onChange={handleChange}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"14\"\r\n                  placeholder=\"6.5\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"nitrogen\">Nitrogen (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"nitrogen\"\r\n                  name=\"nitrogen\"\r\n                  value={soilData.nitrogen}\r\n                  onChange={handleChange}\r\n                  placeholder=\"50\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phosphorus\">Phosphorus (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"phosphorus\"\r\n                  name=\"phosphorus\"\r\n                  value={soilData.phosphorus}\r\n                  onChange={handleChange}\r\n                  placeholder=\"25\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"potassium\">Potassium (ppm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"potassium\"\r\n                  name=\"potassium\"\r\n                  value={soilData.potassium}\r\n                  onChange={handleChange}\r\n                  placeholder=\"150\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"moisture\">Moisture (%)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"moisture\"\r\n                  name=\"moisture\"\r\n                  value={soilData.moisture}\r\n                  onChange={handleChange}\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  placeholder=\"60\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"temperature\">Temperature (°C)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"temperature\"\r\n                  name=\"temperature\"\r\n                  value={soilData.temperature}\r\n                  onChange={handleChange}\r\n                  placeholder=\"25\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"analyze-button\"\r\n            >\r\n              {loading ? 'Analyzing...' : 'Analyze Soil'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {results && (\r\n          <div className=\"results-section\">\r\n            <h2>Analysis Results</h2>\r\n            <div className=\"results-grid\">\r\n              <div className=\"result-card\">\r\n                <h3>Soil Type</h3>\r\n                <p>{results.soilType}</p>\r\n              </div>\r\n              \r\n              <div className=\"result-card\">\r\n                <h3>Fertility Level</h3>\r\n                <p className={`fertility ${results.fertility.toLowerCase()}`}>\r\n                  {results.fertility}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"recommendations\">\r\n              <h3>Recommendations</h3>\r\n              <ul>\r\n                {results.recommendations.map((rec, index) => (\r\n                  <li key={index}>{rec}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"suitable-crops\">\r\n              <h3>Recommended Crops</h3>\r\n              <div className=\"crops-grid\">\r\n                {results.suitableCrops.map((crop, index) => (\r\n                  <span key={index} className=\"crop-tag\">\r\n                    {crop}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoilAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}