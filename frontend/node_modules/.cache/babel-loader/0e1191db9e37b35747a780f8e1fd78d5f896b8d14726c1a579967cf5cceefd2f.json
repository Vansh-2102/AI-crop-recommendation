{"ast":null,"code":"var _jsxFileName = \"D:\\\\deep ai farm\\\\AI-crop-recommendation\\\\frontend\\\\src\\\\pages\\\\SoilAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Droplets, Upload, BarChart3, Sprout } from 'lucide-react';\nimport { soilAPI, recommendationsAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoilAnalysis = () => {\n  _s();\n  const [soilData, setSoilData] = useState({\n    ph: '',\n    nitrogen: '',\n    phosphorus: '',\n    potassium: '',\n    moisture: '',\n    temperature: '',\n    clay: '',\n    sand: '',\n    silt: '',\n    organic_matter: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [cropRecommendations, setCropRecommendations] = useState(null);\n  const [recommendationsLoading, setRecommendationsLoading] = useState(false);\n  const handleChange = e => {\n    setSoilData({\n      ...soilData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setCropRecommendations(null);\n    try {\n      // Build payload for backend analyze endpoint\n      const payload = {\n        soil_data: {\n          ph: soilData.ph !== '' ? parseFloat(soilData.ph) : undefined,\n          nitrogen: soilData.nitrogen !== '' ? parseFloat(soilData.nitrogen) / 1000 : undefined,\n          phosphorus: soilData.phosphorus !== '' ? parseFloat(soilData.phosphorus) : undefined,\n          potassium: soilData.potassium !== '' ? parseFloat(soilData.potassium) : undefined,\n          moisture: soilData.moisture !== '' ? Math.min(1, Math.max(0, parseFloat(soilData.moisture) / 100)) : undefined,\n          temperature: soilData.temperature !== '' ? parseFloat(soilData.temperature) : undefined,\n          clay: soilData.clay !== '' ? parseFloat(soilData.clay) : undefined,\n          sand: soilData.sand !== '' ? parseFloat(soilData.sand) : undefined,\n          silt: soilData.silt !== '' ? parseFloat(soilData.silt) : undefined,\n          organic_matter: soilData.organic_matter !== '' ? parseFloat(soilData.organic_matter) : undefined\n        }\n      };\n      const {\n        data\n      } = await soilAPI.analyzeSoil(payload);\n\n      // Map backend response to UI-friendly shape\n      const analysis = (data === null || data === void 0 ? void 0 : data.analysis) || {};\n      const summary = (data === null || data === void 0 ? void 0 : data.summary) || {};\n      const ui = {\n        soilType: analysis.soil_type || 'N/A',\n        fertility: (analysis.fertility_level || 'medium').charAt(0).toUpperCase() + (analysis.fertility_level || 'medium').slice(1),\n        recommendations: (analysis.recommendations || []).map(r => r.message || r.action || ''),\n        suitableCrops: [],\n        score: data === null || data === void 0 ? void 0 : data.soil_quality_score,\n        overallStatus: summary.overall_status,\n        drainage: analysis.drainage,\n        texture: analysis.texture,\n        nutrientBalance: analysis.nutrient_balance,\n        organicMatterStatus: analysis.organic_matter_status,\n        phStatus: analysis.ph_status\n      };\n      setResults(ui);\n      toast.success('Soil analysis completed!');\n\n      // Fetch crop recommendations based on soil data\n      await fetchCropRecommendations(payload.soil_data, analysis);\n    } catch (error) {\n      console.error('Soil analysis failed:', error);\n      toast.error('Analysis failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCropRecommendations = async (soilData, analysis) => {\n    setRecommendationsLoading(true);\n    try {\n      const recommendationPayload = {\n        location: 'Your Farm',\n        soil_data: {\n          ph: soilData.ph || 7.0,\n          moisture: soilData.moisture || 0.3,\n          organic_matter: soilData.organic_matter || 2.0,\n          nitrogen: soilData.nitrogen || 0.2,\n          phosphorus: soilData.phosphorus || 20,\n          potassium: soilData.potassium || 150,\n          soil_type: analysis.soil_type || 'loamy',\n          clay: soilData.clay || 30,\n          sand: soilData.sand || 40,\n          silt: soilData.silt || 30\n        },\n        weather_data: {\n          temperature: soilData.temperature || 25,\n          humidity: 60\n        },\n        farm_size: 1,\n        budget: 50000\n      };\n      const {\n        data\n      } = await recommendationsAPI.getCropRecommendations(recommendationPayload);\n      setCropRecommendations(data.recommendations || []);\n      toast.success('Crop recommendations generated!');\n    } catch (error) {\n      console.error('Failed to fetch crop recommendations:', error);\n      toast.error('Failed to get crop recommendations');\n    } finally {\n      setRecommendationsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"soil-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Soil Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyze your soil composition and get recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Soil Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"soil-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ph\",\n                children: \"pH Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"ph\",\n                name: \"ph\",\n                value: soilData.ph,\n                onChange: handleChange,\n                step: \"0.1\",\n                min: \"0\",\n                max: \"14\",\n                placeholder: \"6.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nitrogen\",\n                children: \"Nitrogen (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"nitrogen\",\n                name: \"nitrogen\",\n                value: soilData.nitrogen,\n                onChange: handleChange,\n                placeholder: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phosphorus\",\n                children: \"Phosphorus (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"phosphorus\",\n                name: \"phosphorus\",\n                value: soilData.phosphorus,\n                onChange: handleChange,\n                placeholder: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"potassium\",\n                children: \"Potassium (ppm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"potassium\",\n                name: \"potassium\",\n                value: soilData.potassium,\n                onChange: handleChange,\n                placeholder: \"150\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"moisture\",\n                children: \"Moisture (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"moisture\",\n                name: \"moisture\",\n                value: soilData.moisture,\n                onChange: handleChange,\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"temperature\",\n                children: \"Temperature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"temperature\",\n                name: \"temperature\",\n                value: soilData.temperature,\n                onChange: handleChange,\n                placeholder: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"clay\",\n                children: \"Clay (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"clay\",\n                name: \"clay\",\n                value: soilData.clay,\n                onChange: handleChange,\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sand\",\n                children: \"Sand (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"sand\",\n                name: \"sand\",\n                value: soilData.sand,\n                onChange: handleChange,\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"silt\",\n                children: \"Silt (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"silt\",\n                name: \"silt\",\n                value: soilData.silt,\n                onChange: handleChange,\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"organic_matter\",\n                children: \"Organic Matter (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"organic_matter\",\n                name: \"organic_matter\",\n                value: soilData.organic_matter,\n                onChange: handleChange,\n                step: \"0.1\",\n                min: \"0\",\n                max: \"100\",\n                placeholder: \"2.0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            className: \"analyze-button\",\n            children: loading ? 'Analyzing...' : 'Analyze Soil'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Soil Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.soilType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Fertility Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `fertility ${results.fertility.toLowerCase()}`,\n              children: results.fertility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), typeof results.score === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Soil Quality Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [results.score, \"/100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), results.overallStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Overall Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.overallStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: results.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: rec\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), cropRecommendations && cropRecommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(Sprout, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), \"Recommended Crops\", recommendationsLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-text\",\n              children: \" (Loading...)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendations-grid\",\n            children: cropRecommendations.slice(0, 6).map((crop, index) => {\n              var _crop$estimated_yield, _crop$estimated_cost, _crop$estimated_profi, _crop$factors, _crop$growing_require, _crop$growing_require2, _crop$growing_require3, _crop$growing_require4, _crop$growing_require5, _crop$growing_require6, _crop$growing_require7, _crop$growing_require8, _crop$growing_require9, _crop$growing_require0, _crop$growing_require1;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crop-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"crop-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: crop.crop.charAt(0).toUpperCase() + crop.crop.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"crop-score\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"suitability-score\",\n                      children: [crop.suitability_score, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"confidence-score\",\n                      children: [\"Confidence: \", crop.confidence, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"crop-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"crop-metrics\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Estimated Yield:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value\",\n                        children: [(_crop$estimated_yield = crop.estimated_yield) === null || _crop$estimated_yield === void 0 ? void 0 : _crop$estimated_yield.toLocaleString(), \" kg\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Estimated Cost:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value\",\n                        children: [\"\\u20B9\", (_crop$estimated_cost = crop.estimated_cost) === null || _crop$estimated_cost === void 0 ? void 0 : _crop$estimated_cost.toLocaleString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Estimated Profit:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value profit\",\n                        children: [\"\\u20B9\", (_crop$estimated_profi = crop.estimated_profit) === null || _crop$estimated_profi === void 0 ? void 0 : _crop$estimated_profi.toLocaleString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metric\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Profit Margin:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value\",\n                        children: [crop.profit_margin, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"crop-factors\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Why this crop?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: (_crop$factors = crop.factors) === null || _crop$factors === void 0 ? void 0 : _crop$factors.slice(0, 3).map((factor, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: factor\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"crop-requirements\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Growing Requirements\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"requirements-grid\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"req-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-label\",\n                          children: \"pH Range:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-value\",\n                          children: [(_crop$growing_require = crop.growing_requirements) === null || _crop$growing_require === void 0 ? void 0 : (_crop$growing_require2 = _crop$growing_require.optimal_ph) === null || _crop$growing_require2 === void 0 ? void 0 : _crop$growing_require2[0], \" - \", (_crop$growing_require3 = crop.growing_requirements) === null || _crop$growing_require3 === void 0 ? void 0 : (_crop$growing_require4 = _crop$growing_require3.optimal_ph) === null || _crop$growing_require4 === void 0 ? void 0 : _crop$growing_require4[1]]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"req-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-label\",\n                          children: \"Temperature:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 379,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-value\",\n                          children: [(_crop$growing_require5 = crop.growing_requirements) === null || _crop$growing_require5 === void 0 ? void 0 : (_crop$growing_require6 = _crop$growing_require5.optimal_temp) === null || _crop$growing_require6 === void 0 ? void 0 : _crop$growing_require6[0], \"\\xB0C - \", (_crop$growing_require7 = crop.growing_requirements) === null || _crop$growing_require7 === void 0 ? void 0 : (_crop$growing_require8 = _crop$growing_require7.optimal_temp) === null || _crop$growing_require8 === void 0 ? void 0 : _crop$growing_require8[1], \"\\xB0C\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"req-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-label\",\n                          children: \"Water:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-value\",\n                          children: (_crop$growing_require9 = crop.growing_requirements) === null || _crop$growing_require9 === void 0 ? void 0 : _crop$growing_require9.water_requirement\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"req-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-label\",\n                          children: \"Soil Type:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 387,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"req-value\",\n                          children: (_crop$growing_require0 = crop.growing_requirements) === null || _crop$growing_require0 === void 0 ? void 0 : (_crop$growing_require1 = _crop$growing_require0.soil_type) === null || _crop$growing_require1 === void 0 ? void 0 : _crop$growing_require1.join(', ')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 388,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), cropRecommendations.length > 6 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"more-crops\",\n            children: [\"+ \", cropRecommendations.length - 6, \" more crops available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(SoilAnalysis, \"PlQCVZEbqdfDqgJN16mICtl69lY=\");\n_c = SoilAnalysis;\nexport default SoilAnalysis;\nvar _c;\n$RefreshReg$(_c, \"SoilAnalysis\");","map":{"version":3,"names":["React","useState","toast","Droplets","Upload","BarChart3","Sprout","soilAPI","recommendationsAPI","jsxDEV","_jsxDEV","SoilAnalysis","_s","soilData","setSoilData","ph","nitrogen","phosphorus","potassium","moisture","temperature","clay","sand","silt","organic_matter","loading","setLoading","results","setResults","cropRecommendations","setCropRecommendations","recommendationsLoading","setRecommendationsLoading","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","soil_data","parseFloat","undefined","Math","min","max","data","analyzeSoil","analysis","summary","ui","soilType","soil_type","fertility","fertility_level","charAt","toUpperCase","slice","recommendations","map","r","message","action","suitableCrops","score","soil_quality_score","overallStatus","overall_status","drainage","texture","nutrientBalance","nutrient_balance","organicMatterStatus","organic_matter_status","phStatus","ph_status","success","fetchCropRecommendations","error","console","recommendationPayload","location","weather_data","humidity","farm_size","budget","getCropRecommendations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","step","placeholder","disabled","toLowerCase","rec","index","length","crop","_crop$estimated_yield","_crop$estimated_cost","_crop$estimated_profi","_crop$factors","_crop$growing_require","_crop$growing_require2","_crop$growing_require3","_crop$growing_require4","_crop$growing_require5","_crop$growing_require6","_crop$growing_require7","_crop$growing_require8","_crop$growing_require9","_crop$growing_require0","_crop$growing_require1","suitability_score","confidence","estimated_yield","toLocaleString","estimated_cost","estimated_profit","profit_margin","factors","factor","idx","growing_requirements","optimal_ph","optimal_temp","water_requirement","join","_c","$RefreshReg$"],"sources":["D:/deep ai farm/AI-crop-recommendation/frontend/src/pages/SoilAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Droplets, Upload, BarChart3, Sprout } from 'lucide-react';\nimport { soilAPI, recommendationsAPI } from '../services/api';\n\nconst SoilAnalysis = () => {\n  const [soilData, setSoilData] = useState({\n    ph: '',\n    nitrogen: '',\n    phosphorus: '',\n    potassium: '',\n    moisture: '',\n    temperature: '',\n    clay: '',\n    sand: '',\n    silt: '',\n    organic_matter: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [cropRecommendations, setCropRecommendations] = useState(null);\n  const [recommendationsLoading, setRecommendationsLoading] = useState(false);\n\n  const handleChange = (e) => {\n    setSoilData({\n      ...soilData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setCropRecommendations(null);\n\n    try {\n      // Build payload for backend analyze endpoint\n      const payload = {\n        soil_data: {\n          ph: soilData.ph !== '' ? parseFloat(soilData.ph) : undefined,\n          nitrogen: soilData.nitrogen !== '' ? parseFloat(soilData.nitrogen) / 1000 : undefined,\n          phosphorus: soilData.phosphorus !== '' ? parseFloat(soilData.phosphorus) : undefined,\n          potassium: soilData.potassium !== '' ? parseFloat(soilData.potassium) : undefined,\n          moisture: soilData.moisture !== '' ? Math.min(1, Math.max(0, parseFloat(soilData.moisture) / 100)) : undefined,\n          temperature: soilData.temperature !== '' ? parseFloat(soilData.temperature) : undefined,\n          clay: soilData.clay !== '' ? parseFloat(soilData.clay) : undefined,\n          sand: soilData.sand !== '' ? parseFloat(soilData.sand) : undefined,\n          silt: soilData.silt !== '' ? parseFloat(soilData.silt) : undefined,\n          organic_matter: soilData.organic_matter !== '' ? parseFloat(soilData.organic_matter) : undefined\n        }\n      };\n\n      const { data } = await soilAPI.analyzeSoil(payload);\n\n      // Map backend response to UI-friendly shape\n      const analysis = data?.analysis || {};\n      const summary = data?.summary || {};\n      const ui = {\n        soilType: analysis.soil_type || 'N/A',\n        fertility: (analysis.fertility_level || 'medium').charAt(0).toUpperCase() + (analysis.fertility_level || 'medium').slice(1),\n        recommendations: (analysis.recommendations || []).map(r => r.message || r.action || ''),\n        suitableCrops: [],\n        score: data?.soil_quality_score,\n        overallStatus: summary.overall_status,\n        drainage: analysis.drainage,\n        texture: analysis.texture,\n        nutrientBalance: analysis.nutrient_balance,\n        organicMatterStatus: analysis.organic_matter_status,\n        phStatus: analysis.ph_status\n      };\n\n      setResults(ui);\n      toast.success('Soil analysis completed!');\n\n      // Fetch crop recommendations based on soil data\n      await fetchCropRecommendations(payload.soil_data, analysis);\n\n    } catch (error) {\n      console.error('Soil analysis failed:', error);\n      toast.error('Analysis failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCropRecommendations = async (soilData, analysis) => {\n    setRecommendationsLoading(true);\n    \n    try {\n      const recommendationPayload = {\n        location: 'Your Farm',\n        soil_data: {\n          ph: soilData.ph || 7.0,\n          moisture: soilData.moisture || 0.3,\n          organic_matter: soilData.organic_matter || 2.0,\n          nitrogen: soilData.nitrogen || 0.2,\n          phosphorus: soilData.phosphorus || 20,\n          potassium: soilData.potassium || 150,\n          soil_type: analysis.soil_type || 'loamy',\n          clay: soilData.clay || 30,\n          sand: soilData.sand || 40,\n          silt: soilData.silt || 30\n        },\n        weather_data: {\n          temperature: soilData.temperature || 25,\n          humidity: 60\n        },\n        farm_size: 1,\n        budget: 50000\n      };\n\n      const { data } = await recommendationsAPI.getCropRecommendations(recommendationPayload);\n      \n      setCropRecommendations(data.recommendations || []);\n      toast.success('Crop recommendations generated!');\n    } catch (error) {\n      console.error('Failed to fetch crop recommendations:', error);\n      toast.error('Failed to get crop recommendations');\n    } finally {\n      setRecommendationsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"soil-analysis\">\n      <div className=\"page-header\">\n        <h1>Soil Analysis</h1>\n        <p>Analyze your soil composition and get recommendations</p>\n      </div>\n\n      <div className=\"analysis-container\">\n        <div className=\"input-section\">\n          <h2>Enter Soil Data</h2>\n          <form onSubmit={handleSubmit} className=\"soil-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"ph\">pH Level</label>\n                <input\n                  type=\"number\"\n                  id=\"ph\"\n                  name=\"ph\"\n                  value={soilData.ph}\n                  onChange={handleChange}\n                  step=\"0.1\"\n                  min=\"0\"\n                  max=\"14\"\n                  placeholder=\"6.5\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"nitrogen\">Nitrogen (ppm)</label>\n                <input\n                  type=\"number\"\n                  id=\"nitrogen\"\n                  name=\"nitrogen\"\n                  value={soilData.nitrogen}\n                  onChange={handleChange}\n                  placeholder=\"50\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"phosphorus\">Phosphorus (ppm)</label>\n                <input\n                  type=\"number\"\n                  id=\"phosphorus\"\n                  name=\"phosphorus\"\n                  value={soilData.phosphorus}\n                  onChange={handleChange}\n                  placeholder=\"25\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"potassium\">Potassium (ppm)</label>\n                <input\n                  type=\"number\"\n                  id=\"potassium\"\n                  name=\"potassium\"\n                  value={soilData.potassium}\n                  onChange={handleChange}\n                  placeholder=\"150\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"moisture\">Moisture (%)</label>\n                <input\n                  type=\"number\"\n                  id=\"moisture\"\n                  name=\"moisture\"\n                  value={soilData.moisture}\n                  onChange={handleChange}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"60\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"temperature\">Temperature (°C)</label>\n                <input\n                  type=\"number\"\n                  id=\"temperature\"\n                  name=\"temperature\"\n                  value={soilData.temperature}\n                  onChange={handleChange}\n                  placeholder=\"25\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"clay\">Clay (%)</label>\n                <input\n                  type=\"number\"\n                  id=\"clay\"\n                  name=\"clay\"\n                  value={soilData.clay}\n                  onChange={handleChange}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"30\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"sand\">Sand (%)</label>\n                <input\n                  type=\"number\"\n                  id=\"sand\"\n                  name=\"sand\"\n                  value={soilData.sand}\n                  onChange={handleChange}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"40\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"silt\">Silt (%)</label>\n                <input\n                  type=\"number\"\n                  id=\"silt\"\n                  name=\"silt\"\n                  value={soilData.silt}\n                  onChange={handleChange}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"30\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"organic_matter\">Organic Matter (%)</label>\n                <input\n                  type=\"number\"\n                  id=\"organic_matter\"\n                  name=\"organic_matter\"\n                  value={soilData.organic_matter}\n                  onChange={handleChange}\n                  step=\"0.1\"\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"2.0\"\n                />\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"analyze-button\"\n            >\n              {loading ? 'Analyzing...' : 'Analyze Soil'}\n            </button>\n          </form>\n        </div>\n\n        {results && (\n          <div className=\"results-section\">\n            <h2>Analysis Results</h2>\n            <div className=\"results-grid\">\n              <div className=\"result-card\">\n                <h3>Soil Type</h3>\n                <p>{results.soilType}</p>\n              </div>\n              \n              <div className=\"result-card\">\n                <h3>Fertility Level</h3>\n                <p className={`fertility ${results.fertility.toLowerCase()}`}>\n                  {results.fertility}\n                </p>\n              </div>\n              {typeof results.score === 'number' && (\n                <div className=\"result-card\">\n                  <h3>Soil Quality Score</h3>\n                  <p>{results.score}/100</p>\n                </div>\n              )}\n              {results.overallStatus && (\n                <div className=\"result-card\">\n                  <h3>Overall Status</h3>\n                  <p>{results.overallStatus}</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"recommendations\">\n              <h3>Recommendations</h3>\n              <ul>\n                {results.recommendations.map((rec, index) => (\n                  <li key={index}>{rec}</li>\n                ))}\n              </ul>\n            </div>\n\n            {cropRecommendations && cropRecommendations.length > 0 && (\n              <div className=\"crop-recommendations\">\n                <h3>\n                  <Sprout className=\"icon\" />\n                  Recommended Crops\n                  {recommendationsLoading && <span className=\"loading-text\"> (Loading...)</span>}\n                </h3>\n                <div className=\"recommendations-grid\">\n                  {cropRecommendations.slice(0, 6).map((crop, index) => (\n                    <div key={index} className=\"crop-card\">\n                      <div className=\"crop-header\">\n                        <h4>{crop.crop.charAt(0).toUpperCase() + crop.crop.slice(1)}</h4>\n                        <div className=\"crop-score\">\n                          <span className=\"suitability-score\">{crop.suitability_score}%</span>\n                          <span className=\"confidence-score\">Confidence: {crop.confidence}%</span>\n                        </div>\n                      </div>\n                      <div className=\"crop-details\">\n                        <div className=\"crop-metrics\">\n                          <div className=\"metric\">\n                            <span className=\"label\">Estimated Yield:</span>\n                            <span className=\"value\">{crop.estimated_yield?.toLocaleString()} kg</span>\n                          </div>\n                          <div className=\"metric\">\n                            <span className=\"label\">Estimated Cost:</span>\n                            <span className=\"value\">₹{crop.estimated_cost?.toLocaleString()}</span>\n                          </div>\n                          <div className=\"metric\">\n                            <span className=\"label\">Estimated Profit:</span>\n                            <span className=\"value profit\">₹{crop.estimated_profit?.toLocaleString()}</span>\n                          </div>\n                          <div className=\"metric\">\n                            <span className=\"label\">Profit Margin:</span>\n                            <span className=\"value\">{crop.profit_margin}%</span>\n                          </div>\n                        </div>\n                        <div className=\"crop-factors\">\n                          <h5>Why this crop?</h5>\n                          <ul>\n                            {crop.factors?.slice(0, 3).map((factor, idx) => (\n                              <li key={idx}>{factor}</li>\n                            ))}\n                          </ul>\n                        </div>\n                        <div className=\"crop-requirements\">\n                          <h5>Growing Requirements</h5>\n                          <div className=\"requirements-grid\">\n                            <div className=\"req-item\">\n                              <span className=\"req-label\">pH Range:</span>\n                              <span className=\"req-value\">{crop.growing_requirements?.optimal_ph?.[0]} - {crop.growing_requirements?.optimal_ph?.[1]}</span>\n                            </div>\n                            <div className=\"req-item\">\n                              <span className=\"req-label\">Temperature:</span>\n                              <span className=\"req-value\">{crop.growing_requirements?.optimal_temp?.[0]}°C - {crop.growing_requirements?.optimal_temp?.[1]}°C</span>\n                            </div>\n                            <div className=\"req-item\">\n                              <span className=\"req-label\">Water:</span>\n                              <span className=\"req-value\">{crop.growing_requirements?.water_requirement}</span>\n                            </div>\n                            <div className=\"req-item\">\n                              <span className=\"req-label\">Soil Type:</span>\n                              <span className=\"req-value\">{crop.growing_requirements?.soil_type?.join(', ')}</span>\n                            </div>\n                          </div>\n              </div>\n            </div>\n                    </div>\n                  ))}\n                </div>\n                {cropRecommendations.length > 6 && (\n                  <p className=\"more-crops\">+ {cropRecommendations.length - 6} more crops available</p>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SoilAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}